apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: argocd.k8s.core.modules.krateo.io
  labels:
    platform: kubernetes
spec:
  writeConnectionSecretsToNamespace: krateo-system
  compositeTypeRef:
    apiVersion: modules.krateo.io/v1alpha1
    kind: ArgoCD
  resources:
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          forProvider:
            chart:
              name: argo-cd
              repository: https://argoproj.github.io/argo-helm
              version: 3.26.5
            namespace: krateo-system
            values:
              server:
                # extraArgs:
                #   - --insecure
                rbacConfig:
                  policy.default: "role:admin"
                config:
                  accounts.krateo-dashboard: apiKey, login
                  accounts.krateo-dashboard.enabled: "true"
                resources:
                  limits:
                    cpu: 100m
                    memory: 128Mi
                  requests:
                    cpu: 50m
                    memory: 64Mi
              controller:
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 250m
                    memory: 256Mi
              dex:
                resources:
                  limits:
                    cpu: 50m
                    memory: 64Mi
                  requests:
                    cpu: 10m
                    memory: 32Mi
              redis:
                resources:
                  limits:
                    cpu: 200m
                    memory: 128Mi
                  requests:
                    cpu: 100m
                    memory: 64Mi
              repoServer:
                resources:
                  limits:
                    cpu: 50m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
      patches:
        - fromFieldPath: "spec.argo-cd.version"
          toFieldPath: "spec.forProvider.chart.version"
        - fromFieldPath: "spec.argo-cd.redis.securityContext"
          toFieldPath: "spec.forProvider.values.redis.securityContext"
        - fromFieldPath: "spec.argo-cd.redis.securityContext.runAsNonRoot"
          toFieldPath: "spec.forProvider.values.redis.securityContext.runAsNonRoot"
        - fromFieldPath: "spec.argo-cd.redis.securityContext.runAsUser"
          toFieldPath: "spec.forProvider.values.redis.securityContext.runAsUser"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-providerconfig-incluster"
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-argocd"
        - fromFieldPath: metadata.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
    - base:
        apiVersion: pkg.crossplane.io/v1alpha1
        kind: ControllerConfig
        spec:
          args:
            - --debug
          securityContext: {}
          podSecurityContext: {}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-controllerconfig"
    - base:
        apiVersion: pkg.crossplane.io/v1
        kind: Provider
        metadata:
          name: provider-argocd
        spec:
          package: "ghcr.io/krateoplatformops/crossplane-provider-argocd-token:0.1.14"
          packagePullPolicy: Always
          # packagePullSecrets:
          #   - name: cr-token
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd"
        - fromFieldPath: metadata.name
          toFieldPath: spec.controllerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-controllerconfig"
    - base:
        apiVersion: argocd.krateoplatformops.io/v1alpha1
        kind: ProviderConfig
        metadata:
          name: provider-argocd-providerconfig
        spec:
          #          serverUrl: https://argocd-server.argocd.svc:443
          credentials:
            source: Secret
            secretRef:
              namespace: krateo-system
              name: argocd-initial-admin-secret
              key: password
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-providerconfig"
        - fromFieldPath: metadata.name
          toFieldPath: spec.serverUrl
          transforms:
            - type: string
              string:
                fmt: "https://%s-argocd-server.krateo-system.svc:443"
    - base:
        apiVersion: argocd.krateoplatformops.io/v1alpha1
        kind: Token
        metadata:
          name: krateo-dashboard-argocd-token
        spec:
          forProvider:
            expiresIn: 0s
            account: krateo-dashboard
            writeTokenSecretToRef:
              name: krateo-dashboard-argocd-token
              key: authToken
              namespace: krateo-system
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-providerconfig"