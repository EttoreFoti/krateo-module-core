apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
#  name: demostacks.gcp-stack-template-plus.projectkerberus.io
  name: core.modules.krateoplatformops.io
spec:
#  writeConnectionSecretsToNamespace: crossplane-system
  writeConnectionSecretsToNamespace: krateo-system
  compositeTypeRef:
#    apiVersion: gcp-stack-template-plus.projectkerberus.io/v1alpha1
    apiVersion: modules.krateoplatformops.io/v1alpha1
#    kind: DemoStack
    kind: Core
  resources:
    - base:
        apiVersion: argocd.projectkerberus.io/v1alpha1
        kind: ProviderConfig
        metadata:
          name: argocd-provider-config
        spec:
          serverAddr: argocd-server.argocd.svc:443
          insecure: true
          # port forward is useful during development
          credentials:
            source: Secret
            secretRef:
              namespace: krateo-system
              name: argocd-credentials
              key: authToken
    - base:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: argocd-cm
          namespace: krateo-system
          labels:
            app.kubernetes.io/name: argocd-cm
            app.kubernetes.io/part-of: argocd
        data:
          # add an additional local user with apiKey and login capabilities
          #   apiKey - allows generating API keys
          #   login - allows to login using UI
          accounts.kerberus-dashboard: apiKey, login
    - base:
        apiVersion: tokens.argocd.projectkerberus.io/v1alpha1
        kind: Token
        metadata:
          name: argocd-kerberus-dashboard-credentials
        spec:
          forProvider:
            expiresIn: 0s
            account: kerberus-dashboard
            writeTokenSecretToRef:
              name: argocd-kerberus-dashboard-credentials
              key: authToken
              namespace: krateo-system
          providerConfigRef:
            name: argocd-provider-config
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: krateo-system
              key: kubeconfig
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-helm-providerconfig"
        - fromFieldPath: "metadata.name"
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-krateo-kubeconfig"
      readinessChecks:
        - type: None
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
#        metadata:
#          annotations:
#            crossplane.io/external-name: wordpress
        spec:
          forProvider:
            chart:
              name: provider-argocd
              repository: https://projectkerberus.io/provider-argocd-helm
              version: 0.2.0
            namespace: krateo-system
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-helm-providerconfig"
